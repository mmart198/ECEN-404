{"remainingRequest":"C:\\Users\\Mauricio\\Documents\\GitHub\\ECEN-404_1\\reports\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Mauricio\\Documents\\GitHub\\ECEN-404_1\\reports\\node_modules\\vuetify-loader\\lib\\loader.js??ref--18-0!C:\\Users\\Mauricio\\Documents\\GitHub\\ECEN-404_1\\reports\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Mauricio\\Documents\\GitHub\\ECEN-404_1\\reports\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Mauricio\\Documents\\GitHub\\ECEN-404_1\\reports\\src\\views\\Results.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Mauricio\\Documents\\GitHub\\ECEN-404_1\\reports\\src\\views\\Results.vue","mtime":1600710227862},{"path":"C:\\Users\\Mauricio\\Documents\\GitHub\\ECEN-404_1\\reports\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Mauricio\\Documents\\GitHub\\ECEN-404_1\\reports\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Mauricio\\Documents\\GitHub\\ECEN-404_1\\reports\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1574476662000},{"path":"C:\\Users\\Mauricio\\Documents\\GitHub\\ECEN-404_1\\reports\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Mauricio\\Documents\\GitHub\\ECEN-404_1\\reports\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZnJvbSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmciOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuZXhlYyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pdGVyYXRvciI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5yZXBsYWNlIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnNwbGl0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5pdGVyYXRvciI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBWdWUgZnJvbSAndnVlJzsKaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKaW1wb3J0IFZ1ZUF4aW9zIGZyb20gJ3Z1ZS1heGlvcyc7CmltcG9ydCBWdWVBcGV4Q2hhcnRzIGZyb20gJ3Z1ZS1hcGV4Y2hhcnRzJzsKVnVlLmNvbXBvbmVudCgnYXBleGNoYXJ0JywgVnVlQXBleENoYXJ0cyk7ClZ1ZS51c2UoVnVlQXhpb3MsIGF4aW9zKTsKZXhwb3J0IGRlZmF1bHQgewogIHByb3BzOiB7CiAgICBzb3VyY2U6IFN0cmluZwogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHNhbXBsZUlEOiAiIiwKICAgICAgZGlzcGxheVJlc3VsdHM6IGZhbHNlLAogICAgICBpc0xvYWRpbmc6IGZhbHNlLAogICAgICByZXN1bHRzOiBudWxsLAogICAgICBzZXJpZXM6IFt7CiAgICAgICAgbmFtZTogJ0ZpYmVyIENvdW50JywKICAgICAgICBkYXRhOiBbXQogICAgICB9XSwKICAgICAgY2hhcnRPcHRpb25zOiB7CiAgICAgICAgZ3JpZDogewogICAgICAgICAgc2hvdzogdHJ1ZSwKICAgICAgICAgIGJvcmRlckNvbG9yOiAnIzQ3NDc0NycsCiAgICAgICAgICBzdHJva2VEYXNoQXJyYXk6IDAsCiAgICAgICAgICBwb3NpdGlvbjogJ2JhY2snLAogICAgICAgICAgeGF4aXM6IHsKICAgICAgICAgICAgbGluZXM6IHsKICAgICAgICAgICAgICBzaG93OiBmYWxzZQogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgeWF4aXM6IHsKICAgICAgICAgICAgbGluZXM6IHsKICAgICAgICAgICAgICBzaG93OiB0cnVlCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICByb3c6IHsKICAgICAgICAgICAgY29sb3JzOiB1bmRlZmluZWQsCiAgICAgICAgICAgIG9wYWNpdHk6IDAuMQogICAgICAgICAgfSwKICAgICAgICAgIGNvbHVtbjogewogICAgICAgICAgICBjb2xvcnM6IHVuZGVmaW5lZCwKICAgICAgICAgICAgb3BhY2l0eTogMC4xCiAgICAgICAgICB9LAogICAgICAgICAgcGFkZGluZzogewogICAgICAgICAgICB0b3A6IDAsCiAgICAgICAgICAgIHJpZ2h0OiAwLAogICAgICAgICAgICBib3R0b206IDAsCiAgICAgICAgICAgIGxlZnQ6IDAKICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIGNvbG9yczogWycjZmZmJ10sCiAgICAgICAgY2hhcnQ6IHsKICAgICAgICAgIC8vYmFja2dyb3VuZDogJyNmZmYnLAogICAgICAgICAgZm9yZUNvbG9yOiAnI2ZmZicsCiAgICAgICAgICBoZWlnaHQ6IDUwMCwKICAgICAgICAgIHR5cGU6ICdiYXInCiAgICAgICAgfSwKICAgICAgICBwbG90T3B0aW9uczogewogICAgICAgICAgYmFyOiB7CiAgICAgICAgICAgIGRhdGFMYWJlbHM6IHsKICAgICAgICAgICAgICBwb3NpdGlvbjogJ3RvcCcgLy8gdG9wLCBjZW50ZXIsIGJvdHRvbQoKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgZGF0YUxhYmVsczogewogICAgICAgICAgZW5hYmxlZDogdHJ1ZSwKICAgICAgICAgIGZvcm1hdHRlcjogZnVuY3Rpb24gZm9ybWF0dGVyKCkgewogICAgICAgICAgICByZXR1cm4gIiI7CiAgICAgICAgICB9LAogICAgICAgICAgb2Zmc2V0WTogLTEwLAogICAgICAgICAgc3R5bGU6IHsKICAgICAgICAgICAgZm9udFNpemU6ICcxMnB4JywKICAgICAgICAgICAgY29sb3JzOiBbIiMzMDQ3NTgiXQogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgeGF4aXM6IHsKICAgICAgICAgIGNhdGVnb3JpZXM6IEFycmF5LmZyb20oQXJyYXkoNjEpLmtleXMoKSksCiAgICAgICAgICBwb3NpdGlvbjogJ2JvdHRvbScsCiAgICAgICAgICB0aXRsZTogewogICAgICAgICAgICBzdHlsZTogewogICAgICAgICAgICAgIGNvbG9yOiAnI2ZmZicKICAgICAgICAgICAgfSwKICAgICAgICAgICAgdGV4dDogJ0ZpYmVyIERpYW1ldGVyICh1bSknLAogICAgICAgICAgICBvZmZzZXRZOiAxMAogICAgICAgICAgfSwKICAgICAgICAgIGF4aXNCb3JkZXI6IHsKICAgICAgICAgICAgc2hvdzogZmFsc2UKICAgICAgICAgIH0sCiAgICAgICAgICBheGlzVGlja3M6IHsKICAgICAgICAgICAgc2hvdzogdHJ1ZQogICAgICAgICAgfSwKICAgICAgICAgIGNyb3NzaGFpcnM6IHsKICAgICAgICAgICAgZmlsbDogewogICAgICAgICAgICAgIHR5cGU6ICdncmFkaWVudCcsCiAgICAgICAgICAgICAgZ3JhZGllbnQ6IHsKICAgICAgICAgICAgICAgIGNvbG9yRnJvbTogJyNEOEUzRjAnLAogICAgICAgICAgICAgICAgY29sb3JUbzogJyNCRUQxRTYnLAogICAgICAgICAgICAgICAgc3RvcHM6IFswLCAxMDBdLAogICAgICAgICAgICAgICAgb3BhY2l0eUZyb206IDAuNCwKICAgICAgICAgICAgICAgIG9wYWNpdHlUbzogMC41CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgdG9vbHRpcDogewogICAgICAgICAgICBlbmFibGVkOiB0cnVlCiAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICB5YXhpczogewogICAgICAgICAgdGl0bGU6IHsKICAgICAgICAgICAgc3R5bGU6IHsKICAgICAgICAgICAgICBjb2xvcjogJyNmZmYnCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHRleHQ6ICdGaWJlciBDb3VudCcsCiAgICAgICAgICAgIG9mZnNldFg6IDEwCiAgICAgICAgICB9LAogICAgICAgICAgbWluOiAwLAogICAgICAgICAgbWF4OiA2MCwKICAgICAgICAgIGF4aXNCb3JkZXI6IHsKICAgICAgICAgICAgc2hvdzogdHJ1ZQogICAgICAgICAgfSwKICAgICAgICAgIGF4aXNUaWNrczogewogICAgICAgICAgICBzaG93OiB0cnVlCiAgICAgICAgICB9LAogICAgICAgICAgbGFiZWxzOiB7CiAgICAgICAgICAgIHNob3c6IHRydWUsCiAgICAgICAgICAgIHN0ZXA6IDUsCiAgICAgICAgICAgIGZvcm1hdHRlcjogZnVuY3Rpb24gZm9ybWF0dGVyKHZhbCkgewogICAgICAgICAgICAgIHJldHVybiB2YWw7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIHRpdGxlOiB7CiAgICAgICAgICB0ZXh0OiAnRmliZXIgRGlhbWV0ZXIgKG1pY3JvbnMpJywKICAgICAgICAgIGZsb2F0aW5nOiBmYWxzZSwKICAgICAgICAgIG9mZnNldFk6IDEwLAogICAgICAgICAgYWxpZ246ICdjZW50ZXInLAogICAgICAgICAgc3R5bGU6IHsKICAgICAgICAgICAgY29sb3I6ICcjZmZmJwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQogICAgfTsKICB9LAogIHdhdGNoOiB7CiAgICBzdG9yZURvY3VtZW50czogZnVuY3Rpb24gc3RvcmVEb2N1bWVudHMoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICBpZiAodGhpcy5zdG9yZURvY3VtZW50cy5sZW5ndGgpIHsKICAgICAgICB0aGlzLnJlc3VsdHMgPSB0aGlzLnN0b3JlRG9jdW1lbnRzLmZpbHRlcihmdW5jdGlvbiAoZCkgewogICAgICAgICAgcmV0dXJuIGQuc2FtcGxlSUQgPT09IF90aGlzLiRyb3V0ZS5wYXJhbXMuc2FtcGxlaWQ7CiAgICAgICAgfSk7CiAgICAgICAgdGhpcy5zZXJpZXNbMF0uZGF0YSA9IHRoaXMuZ2V0RGF0YUFycih0aGlzLnJlc3VsdHNbMF1bIm1pbkRpYW1ldGVyIl0sIHRoaXMucmVzdWx0c1swXVsibWF4RGlhbWV0ZXIiXSwgdGhpcy5yZXN1bHRzWzBdWyJmaWJlcnNIaXN0Il0pOwogICAgICAgIHRoaXMuaXNMb2FkaW5nID0gZmFsc2U7CiAgICAgICAgdGhpcy5kaXNwbGF5UmVzdWx0cyA9IHRydWU7CiAgICAgIH0KICAgIH0KICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICB0aGlzLmlzTG9hZGluZyA9IHRydWU7CgogICAgaWYgKHRoaXMuc3RvcmVEb2N1bWVudHMubGVuZ3RoKSB7CiAgICAgIHRoaXMucmVzdWx0cyA9IHRoaXMuc3RvcmVEb2N1bWVudHMuZmlsdGVyKGZ1bmN0aW9uIChkKSB7CiAgICAgICAgcmV0dXJuIGQuc2FtcGxlSUQgPT09IF90aGlzMi4kcm91dGUucGFyYW1zLnNhbXBsZWlkOwogICAgICB9KTsKICAgICAgdGhpcy5zZXJpZXNbMF0uZGF0YSA9IHRoaXMuZ2V0RGF0YUFycih0aGlzLnJlc3VsdHNbMF1bIm1pbkRpYW1ldGVyIl0sIHRoaXMucmVzdWx0c1swXVsibWF4RGlhbWV0ZXIiXSwgdGhpcy5yZXN1bHRzWzBdWyJmaWJlcnNIaXN0Il0pOwogICAgICB0aGlzLmlzTG9hZGluZyA9IGZhbHNlOwogICAgICB0aGlzLmRpc3BsYXlSZXN1bHRzID0gdHJ1ZTsKICAgIH0gZWxzZSB7CiAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCdwb3B1bGF0ZURvY3VtZW50cycpOwogICAgfQogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIHN0b3JlRG9jdW1lbnRzOiBmdW5jdGlvbiBzdG9yZURvY3VtZW50cygpIHsKICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLnN0YXRlLmRvY3VtZW50czsKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIGdldERhdGFBcnI6IGZ1bmN0aW9uIGdldERhdGFBcnIobWluLCBtYXgsIGRhdGFTdCkgewogICAgICB2YXIgZGF0YVN0ciA9IGRhdGFTdC5yZXBsYWNlKC9bW10nXSsvZywgJycpOwogICAgICB2YXIgdmFscyA9IGRhdGFTdHIuc3BsaXQoJywnKTsKICAgICAgMDsKICAgICAgdmFyIGkgPSAwOwogICAgICB2YXIgcmV0QXJyID0gW107CiAgICAgIHZhciBqID0gMDsKCiAgICAgIGZvciAoaSA9IDE7IGkgPD0gNjA7ICsraSkgewogICAgICAgIGlmIChpID49IG1pbiAmJiBpIDw9IG1heCkgewogICAgICAgICAgcmV0QXJyLnB1c2godmFsc1tqXSk7CiAgICAgICAgICArK2o7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHJldEFyci5wdXNoKDApOwogICAgICAgIH0KICAgICAgfQoKICAgICAgcmV0dXJuIHJldEFycjsKICAgIH0KICB9Cn07"},{"version":3,"sources":["Results.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div>\r\n    <v-content>\r\n      <v-container\r\n        class=\"fill-height\"\r\n        fluid\r\n      >\r\n      <v-row align=\"center\" justify=\"center\">\r\n        <v-col cols=\"1\" sm=\"7\" md=\"9\">\r\n          <div class=\"report slide-in-bck-center\" v-if=\"results && results.length\" style=\"text-align:center;\">\r\n            <p style=\"font-size: 34px;\">Optical Fibre Diameter Analyser (OFDA 100)</p>\r\n            <p style=\"margin-top:-10px;font-size: 34px;\">Test Report</p>\r\n            <p style=\"margin-top:-10px;font-size:14px;\">This Test Performed According to 1.W.T.O Method 47 and 57</p>\r\n            <div style=\"display: flex;width: 100%;\">\r\n              <div style=\"width: 50%; text-align: left;\">\r\n                <p>Customer: {{results[0][\"customerName\"]}}</p>\r\n              </div>\r\n              <div style=\"width: 50%; text-align: left;\">\r\n                <p>Date: {{results[0][\"date_Time\"]}}</p>\r\n              </div>\r\n            </div>\r\n            <p style=\"font-weight: bold;font-size: 28px;\">Animal and Sample Description</p>\r\n            <div style=\"display: flex;width: 100%;\">\r\n              <div style=\"width: 50%; text-align: left;\">\r\n                <div>\r\n                  <p class=\"animal-stats\">Sample ID: {{results[0][\"sampleID\"]}}</p>\r\n                </div>\r\n                <div>\r\n                  <p class=\"animal-stats\">Breed:</p>\r\n                </div>\r\n                <div>\r\n                  <p class=\"animal-stats\">Sex:</p>\r\n                </div>\r\n                <div>\r\n                  <p class=\"animal-stats\">Color:</p>\r\n                </div>\r\n              </div>\r\n              <div style=\"width: 50%; text-align: left;\">\r\n                <div>\r\n                  <p class=\"animal-stats\">Sample Location:</p>\r\n                </div>\r\n                <div>\r\n                  <p class=\"animal-stats\">Sample Date:</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <p style=\"font-size: 28px;font-weight: bold;\">Laboratory Data</p>\r\n            <div style=\"display: flex; width: 100%;\">\r\n              <div style=\"width: 33%; text-align: left;\">\r\n                <div>\r\n                  <p class=\"animal-stats\">Mean Fibre Diameter (um): {{results[0][\"meanDiameter\"]}}</p>\r\n                </div>\r\n                <br>\r\n                <div>\r\n                  <p class=\"animal-stats\">Mean Curvature (deg/mm): {{results[0][\"meanCurvature\"]}}</p>\r\n                </div>\r\n              </div>\r\n              <div style=\"width: 33%; text-align: left;\">\r\n                <div>\r\n                  <p class=\"animal-stats\">Standard Deviation (%): {{results[0][\"std\"]}}</p>\r\n                </div>\r\n                <div>\r\n                  <p class=\"animal-stats\">Coefficient of Variation (%): {{results[0][\"variationCoefficient\"]}}</p>\r\n                </div>\r\n                <div>\r\n                  <p class=\"animal-stats\">SD Curvature (deg/mm): {{results[0][\"sdCurvature\"]}}</p>\r\n                </div>\r\n              </div>\r\n              <div style=\"width: 33%; text-align: left;\">\r\n                <div>\r\n                  <p class=\"animal-stats\">Comfort Factor (%): {{results[0][\"comfortFactor\"]}}</p>\r\n                </div>\r\n                <div>\r\n                  <p class=\"animal-stats\">Spin Fineness (um): </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"slide-in-top\" style=\"width: 100%; display: flex; justify-content: center;\">\r\n            <div v-if=\"isLoading\" class=\"lds-ellipsis\"><div></div><div></div><div></div><div></div></div>\r\n            <div v-if=\"!isLoading && displayResults && !results\" style=\"text-align: center;\">\r\n              <p style=\"font-size: 24px;color: white;\">Could not find any records for Sample ID {{sampleID}}</p>\r\n              <i class=\"fa fa-search\" style=\"font-size: 30px;color: white;\"></i>\r\n            </div>\r\n          </div>\r\n          <v-row align=\"center\" justify=\"center\" v-if=\"results && results.length\">\r\n            <div>\r\n              <apexchart v-if=\"displayResults\" height = \"500\" width=\"1100\" type=\"bar\" :options=\"chartOptions\" :series=\"series\"></apexchart>\r\n            </div>\r\n          </v-row>\r\n        </v-col>\r\n      </v-row>\r\n      </v-container>\r\n    </v-content>\r\n    <v-footer\r\n      color=\"#9e062a\"\r\n      app\r\n    >\r\n      <span class=\"white--text\">ECEN 404</span>\r\n    </v-footer>\r\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\r\n    </div>\r\n</template>\r\n<script>\r\nimport Vue from 'vue'\r\nimport axios from 'axios'\r\nimport VueAxios from 'vue-axios'\r\nimport VueApexCharts from 'vue-apexcharts'\r\nVue.component('apexchart', VueApexCharts)\r\n \r\nVue.use(VueAxios, axios)\r\n\r\n  export default {\r\n    props: {\r\n      source: String,\r\n    },\r\n\r\n    data: () => ({\r\n      sampleID: \"\",\r\n      displayResults: false,\r\n      isLoading: false,\r\n      results: null,\r\n      series: [{\r\n            name: 'Fiber Count',\r\n            \r\n            data: []\r\n          }],\r\n          chartOptions: {\r\n            grid: {\r\n                show: true,\r\n                borderColor: '#474747',\r\n                strokeDashArray: 0,\r\n                position: 'back',\r\n                xaxis: {\r\n                    lines: {\r\n                        show: false\r\n                    }\r\n                },\r\n                yaxis: {\r\n                    lines: {\r\n                        show: true\r\n                    }\r\n                },\r\n                row: {\r\n                    colors: undefined,\r\n                    opacity: 0.1\r\n                },\r\n                column: {\r\n                    colors: undefined,\r\n                    opacity: 0.1\r\n                },\r\n                padding: {\r\n                    top: 0,\r\n                    right: 0,\r\n                    bottom: 0,\r\n                    left: 0\r\n                },\r\n            },\r\n            colors:['#fff'],\r\n            chart: {\r\n              //background: '#fff',\r\n              foreColor:'#fff',\r\n              height: 500,\r\n              type: 'bar',\r\n            },\r\n            plotOptions: {\r\n              bar: {\r\n                dataLabels: {\r\n                  position: 'top', // top, center, bottom\r\n                },\r\n              }\r\n            },\r\n            dataLabels: {\r\n              enabled: true,\r\n              formatter: function () {\r\n                return \"\";\r\n              },\r\n              offsetY: -10,\r\n              style: {\r\n                fontSize: '12px',\r\n                colors: [\"#304758\"]\r\n              }\r\n            },\r\n            \r\n            xaxis: {\r\n              categories:Array.from(Array(61).keys()),\r\n              position: 'bottom',\r\n              title: {\r\n                style: {\r\n                color: '#fff'\r\n                },\r\n                text: 'Fiber Diameter (um)',\r\n                offsetY: 10\r\n              },\r\n              axisBorder: {\r\n                show: false\r\n              },\r\n              axisTicks: {\r\n                show: true,\r\n              },\r\n              crosshairs: {\r\n                fill: {\r\n                  type: 'gradient',\r\n                  gradient: {\r\n                    colorFrom: '#D8E3F0',\r\n                    colorTo: '#BED1E6',\r\n                    stops: [0, 100],\r\n                    opacityFrom: 0.4,\r\n                    opacityTo: 0.5,\r\n                  }\r\n                }\r\n              },\r\n              tooltip: {\r\n                enabled: true,\r\n              }\r\n            },\r\n            yaxis: {\r\n              title: {\r\n                style: {\r\n                color: '#fff'\r\n                },\r\n                text: 'Fiber Count',\r\n                offsetX: 10\r\n              },\r\n              min: 0,\r\n              max: 60,\r\n              \r\n              axisBorder: {\r\n                show: true\r\n              },\r\n              axisTicks: {\r\n                show: true\r\n              },\r\n              labels: {\r\n                show: true,\r\n                step:5,\r\n                formatter: function (val) {\r\n                  return val;\r\n                }\r\n              }\r\n\r\n            \r\n            },\r\n            title: {\r\n              text: 'Fiber Diameter (microns)',\r\n              floating: false,\r\n              offsetY: 10,\r\n              align: 'center',\r\n              style: {\r\n                color: '#fff'\r\n              }\r\n            }\r\n          },\r\n    }),\r\n    watch:{\r\n      storeDocuments () {\r\n        if (this.storeDocuments.length) {\r\n          this.results = this.storeDocuments.filter(d => d.sampleID === this.$route.params.sampleid)\r\n          this.series[0].data = this.getDataArr(this.results[0][\"minDiameter\"],this.results[0][\"maxDiameter\"],this.results[0][\"fibersHist\"]);\r\n          this.isLoading = false\r\n          this.displayResults = true\r\n        }\r\n      }\r\n    },\r\n    created () {\r\n      this.isLoading = true\r\n      if (this.storeDocuments.length) {\r\n        this.results = this.storeDocuments.filter(d => d.sampleID === this.$route.params.sampleid)\r\n        this.series[0].data = this.getDataArr(this.results[0][\"minDiameter\"],this.results[0][\"maxDiameter\"],this.results[0][\"fibersHist\"]);\r\n        this.isLoading = false\r\n        this.displayResults = true\r\n      } else {\r\n        this.$store.dispatch('populateDocuments')\r\n      }\r\n    },\r\n    computed : {\r\n      storeDocuments () {\r\n        return this.$store.state.documents;\r\n      }\r\n    },\r\n    methods:{\r\n      getDataArr(min,max,dataSt){\r\n        var dataStr = dataSt.replace(/[[]']+/g,'')\r\n        var vals = dataStr.split(',');0\r\n        var i = 0;\r\n        var retArr = [];\r\n        var j = 0;\r\n        for(i = 1 ; i <= 60 ; ++i){\r\n            if(i >= min && i <= max){\r\n                retArr.push(vals[j]);\r\n                ++j;\r\n            }\r\n            else{\r\n                retArr.push(0);\r\n            }\r\n        }\r\n        return retArr;\r\n      }\r\n    }\r\n  }\r\n</script>\r\n<style scoped>\r\n</style>"],"sourceRoot":"src/views"}]}